name: Pack and Release

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Verify commit exists in origin/main
      run: |
        git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
        git branch --remote --contains | grep origin/main
    - name: Extract branch name
      id: extract_branch
      run: echo ::set-output name=value::${GITHUB_REF:11}
    - name: dump...
      run: echo "${{ toJson(extract_branch) }}"
    - name: Print github ref
      # THIS GETS PASSED THROUGH AS "refs/heads/<branch name>"
      run: echo "$GITHUB_REF"
    - name: Print github ref ...
      # THIS GETS PASSED THROUGH AS "refs/heads/<branch name>"
      run: echo "$GITHUB_REF#refs/tags/"
    - name: Get version
      id: get_version
      run: echo "##[set-output name=VERSION;]$(echo ${GITHUB_REF#refs/heads/})"
    - name: output VERSION
      run: echo "${{ steps.get_version.outputs.VERSION }}"
    - name: Branch name
      id: branch_name
      run: |
        echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
        echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
        echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
    - name: Build base image
      run: |
        echo $SOURCE_NAME
        echo $SOURCE_BRANCH
        echo $SOURCE_TAG
      env:
        SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
        SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
        SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}#
#    - name: ref...
#      run: echo "${{GITHUB_REF}}"
#    - name: Set VERSION variable from tag
#      run: echo "VERSION=${GITHUB_REF/refs\/tags\/release\-/}" >> $GITHUB_ENV
#    - name: Set VERSION variable from tag
#      run: echo '::set-output name=VERSION::$(echo ${GITHUB_REF})'      
#    - name: Setup .NET
#      uses: actions/setup-dotnet@v1
#      with:
#        dotnet-version: 5.0.x

#    - name: Build
#      run: dotnet build ./src/ --configuration release /p:Version=${VERSION}
#    - name: Test
#      run: dotnet test ./src/ --configuration release /p:Version=${VERSION} --no-build
#    - name: Pack
#      run: dotnet pack ./src/ --configuration release /p:Version=${VERSION} --no-build --output .
#    - name: Push
#      run: dotnet nuget push NuGet.Workflow.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
