name: Pack and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
        default: '0.0.0'
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Extract branch name
      shell: bash
      run: |
        echo "##[set-output name=REF_BRANCH;]$(echo ${GITHUB_REF#refs/*/})"
        echo "##[set-output name=REF_TAG;]$(echo ${GITHUB_REF#refs/tags/})"
        echo "##[set-output name=REF_HEAD;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_ref
    
    - name: ddd
      run: |
        echo ${{ steps.extract_ref.outputs.REF_BRANCH }}
        echo ${{ steps.extract_ref.outputs.REF_TAG }}
        echo ${{ steps.extract_ref.outputs.REF_HEAD }}

    - name: Set the value
      shell: bash
      id: step_one
      run: |
        echo "action_state=yellow" >> $GITHUB_ENV

    - name: Use the value
      shell: bash
      id: step_two
      run: |
        echo "${{ env.action_state }}" # This will output 'yellow'

    - name: set version from workflow_dispatch
      if: github.event_name == 'workflow_dispatch'
      run: |
        echo "action_state=${{ github.event.inputs.version }}" >> $GITHUB_ENV

    - name: set version from tag
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        echo "action_state=${{ github.ref }}" >> $GITHUB_ENV

    - name: echo version
      run: echo "${{env.VERSION}}"


#    - name: ref...
#      run: echo "${{GITHUB_REF}}"
#    - name: Set VERSION variable from tag
#      run: echo "VERSION=${GITHUB_REF/refs\/tags\/release\-/}" >> $GITHUB_ENV
#    - name: Set VERSION variable from tag
#      run: echo '::set-output name=VERSION::$(echo ${GITHUB_REF})'      
#    - name: Setup .NET
#      uses: actions/setup-dotnet@v1
#      with:
#        dotnet-version: 5.0.x

#    - name: Build
#      run: dotnet build ./src/ --configuration release /p:Version=${VERSION}
#    - name: Test
#      run: dotnet test ./src/ --configuration release /p:Version=${VERSION} --no-build
#    - name: Pack
#      run: dotnet pack ./src/ --configuration release /p:Version=${VERSION} --no-build --output .
#    - name: Push
#      run: dotnet nuget push NuGet.Workflow.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
